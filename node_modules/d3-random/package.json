{
  "_args": [
    [
      {
        "raw": "d3-random@1.1.0",
        "scope": null,
        "escapedName": "d3-random",
        "name": "d3-random",
        "rawSpec": "1.1.0",
        "spec": "1.1.0",
        "type": "version"
      },
      "C:\\Users\\Giuliano\\worldwind\\nasaworldwind\\node\\node_modules\\d3"
    ]
  ],
  "_from": "d3-random@1.1.0",
  "_id": "d3-random@1.1.0",
  "_inCache": true,
  "_location": "/d3-random",
  "_nodeVersion": "7.3.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/d3-random-1.1.0.tgz_1493832186789_0.020477791782468557"
  },
  "_npmUser": {
    "name": "mbostock",
    "email": "mike@ocks.org"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "d3-random@1.1.0",
    "scope": null,
    "escapedName": "d3-random",
    "name": "d3-random",
    "rawSpec": "1.1.0",
    "spec": "1.1.0",
    "type": "version"
  },
  "_requiredBy": [
    "/d3"
  ],
  "_resolved": "https://registry.npmjs.org/d3-random/-/d3-random-1.1.0.tgz",
  "_shasum": "6642e506c6fa3a648595d2b2469788a8d12529d3",
  "_shrinkwrap": null,
  "_spec": "d3-random@1.1.0",
  "_where": "C:\\Users\\Giuliano\\worldwind\\nasaworldwind\\node\\node_modules\\d3",
  "author": {
    "name": "Mike Bostock",
    "url": "http://bost.ocks.org/mike"
  },
  "bugs": {
    "url": "https://github.com/d3/d3-random/issues"
  },
  "dependencies": {},
  "description": "Generate random numbers from various distributions.",
  "devDependencies": {
    "d3-array": "1",
    "eslint": "3",
    "package-preamble": "0.1",
    "rollup": "0.41",
    "seedrandom": "2",
    "tape": "4",
    "uglify-js": "^2.8.11"
  },
  "directories": {},
  "dist": {
    "shasum": "6642e506c6fa3a648595d2b2469788a8d12529d3",
    "tarball": "https://registry.npmjs.org/d3-random/-/d3-random-1.1.0.tgz"
  },
  "gitHead": "e080dc81f00fa4cf1965b7edeb33ebcd6e411b04",
  "homepage": "https://d3js.org/d3-random/",
  "jsnext:main": "index",
  "keywords": [
    "d3",
    "d3-module",
    "random",
    "rng"
  ],
  "license": "BSD-3-Clause",
  "main": "build/d3-random.js",
  "maintainers": [
    {
      "name": "mbostock",
      "email": "mike@ocks.org"
    }
  ],
  "module": "index",
  "name": "d3-random",
  "optionalDependencies": {},
  "readme": "# d3-random\n\nGenerate random numbers from various distributions.\n\n## Installing\n\nIf you use NPM, `npm install d3-random`. Otherwise, download the [latest release](https://github.com/d3/d3-random/releases/latest). You can also load directly from [d3js.org](https://d3js.org), either as a [standalone library](https://d3js.org/d3-random.v1.min.js) or as part of [D3 4.0](https://github.com/d3/d3). AMD, CommonJS, and vanilla environments are supported. In vanilla, a `d3` global is exported:\n\n```html\n<script src=\"https://d3js.org/d3-random.v1.min.js\"></script>\n<script>\n\nvar random = d3.randomUniform(1, 10);\n\n</script>\n```\n\n[Try d3-random in your browser.](https://runkit.com/npm/d3-random)\n\n## API Reference\n\n<a name=\"randomUniform\" href=\"#randomUniform\">#</a> d3.<b>randomUniform</b>([<i>min</i>, ][<i>max</i>]) [<>](https://github.com/d3/d3-random/blob/master/src/uniform.js \"Source\")\n\nReturns a function for generating random numbers with a [uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_\\(continuous\\)). The minimum allowed value of a returned number is *min*, and the maximum is *max*. If *min* is not specified, it defaults to 0; if *max* is not specified, it defaults to 1. For example:\n\n```js\nd3.randomUniform(6)(); // Returns a number greater than or equal to 0 and less than 6.\nd3.randomUniform(1, 5)(); // Returns a number greater than or equal to 1 and less than 5.\n```\n\nNote that you can also use the built-in [Math.random](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/random) to generate uniform distributions directly. For example, to generate a random integer between 0 and 99 (inclusive), you can say `Math.random() * 100 | 0`.\n\n<a name=\"randomNormal\" href=\"#randomNormal\">#</a> d3.<b>randomNormal</b>([<i>mu</i>][, <i>sigma</i>]) [<>](https://github.com/d3/d3-random/blob/master/src/normal.js \"Source\")\n\nReturns a function for generating random numbers with a [normal (Gaussian) distribution](https://en.wikipedia.org/wiki/Normal_distribution). The expected value of the generated numbers is *mu*, with the given standard deviation *sigma*. If *mu* is not specified, it defaults to 0; if *sigma* is not specified, it defaults to 1.\n\n<a name=\"randomLogNormal\" href=\"#randomLogNormal\">#</a> d3.<b>randomLogNormal</b>([<i>mu</i>][, <i>sigma</i>]) [<>](https://github.com/d3/d3-random/blob/master/src/logNormal.js \"Source\")\n\nReturns a function for generating random numbers with a [log-normal distribution](https://en.wikipedia.org/wiki/Log-normal_distribution). The expected value of the random variable’s natural logarithm is *mu*, with the given standard deviation *sigma*. If *mu* is not specified, it defaults to 0; if *sigma* is not specified, it defaults to 1.\n\n<a name=\"randomBates\" href=\"#randomBates\">#</a> d3.<b>randomBates</b>(<i>n</i>) [<>](https://github.com/d3/d3-random/blob/master/src/bates.js \"Source\")\n\nReturns a function for generating random numbers with a [Bates distribution](https://en.wikipedia.org/wiki/Bates_distribution) with *n* independent variables.\n\n<a name=\"randomIrwinHall\" href=\"#randomIrwinHall\">#</a> d3.<b>randomIrwinHall</b>(<i>n</i>) [<>](https://github.com/d3/d3-random/blob/master/src/irwinHall.js \"Source\")\n\nReturns a function for generating random numbers with an [Irwin–Hall distribution](https://en.wikipedia.org/wiki/Irwin–Hall_distribution) with *n* independent variables.\n\n<a name=\"randomExponential\" href=\"#randomExponential\">#</a> d3.<b>randomExponential</b>(<i>lambda</i>) [<>](https://github.com/d3/d3-random/blob/master/src/exponential.js \"Source\")\n\nReturns a function for generating random numbers with an [exponential distribution](https://en.wikipedia.org/wiki/Exponential_distribution) with the rate *lambda*; equivalent to time between events in a [Poisson process](https://en.wikipedia.org/wiki/Poisson_point_process) with a mean of 1 / *lambda*. For example, exponential(1/40) generates random times between events where, on average, one event occurs every 40 units of time.\n\n<a name=\"random_source\" href=\"#random_source\">#</a> <i>random</i>.<b>source</b>(<i>source</i>)\n\nReturns the same type of function for generating random numbers but where the given random number generator *source* is used as the source of randomness instead of Math.random. The given random number generator must implement the same interface as Math.random and only return values in the range [0, 1). This is useful when a seeded random number generator is preferable to Math.random. For example:\n\n```js\nvar d3 = require(\"d3-random\"),\n    seedrandom = require(\"seedrandom\"),\n    random = d3.randomNormal.source(seedrandom(\"a22ebc7c488a3a47\"))(0, 1);\n\nrandom(); // 0.9744193494813501\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/d3/d3-random.git"
  },
  "scripts": {
    "postpublish": "git push && git push --tags && cd ../d3.github.com && cp ../d3-random/build/d3-random.js d3-random.v1.js && cp ../d3-random/build/d3-random.min.js d3-random.v1.min.js && git add d3-random.v1.js d3-random.v1.min.js && git commit -m \"d3-random ${npm_package_version}\" && git push && cd - && zip -j build/d3-random.zip -- LICENSE README.md build/d3-random.js build/d3-random.min.js",
    "prepublish": "npm run test && uglifyjs --preamble \"$(preamble)\" build/d3-random.js -c -m -o build/d3-random.min.js",
    "pretest": "rm -rf build && mkdir build && rollup --banner \"$(preamble)\" -f umd -n d3 -o build/d3-random.js -- index.js",
    "test": "tape 'test/**/*-test.js' && eslint index.js src"
  },
  "version": "1.1.0"
}
